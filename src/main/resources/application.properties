
spring.activiti.database-schema-update=true
spring.activiti.database-schema=true
spring.activiti.history-level=full
spring.activiti.check-process-definitions=false
spring.activiti.process-definition-location-prefix= classpath:/processes/ 

#mybatis
mybatis.type-aliases-package=com.daji.activitidemo.entity
#mybatis.config-locations=classpath:mybatis/mybatis-config.xml
#mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

#Hibernate: create table goods (id integer not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
#Hibernate: create table goods (id integer not null auto_increment, name varchar(255), primary key (id)) engine=InnoDB
#jpa建表默认使用MyIsam数据引擎 不支持事务  要使用InnoDB数据引擎 开启事务
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
# 数据库访问配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/activitidemo?serverTimezone=GMT&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initsize =10
spring.datasource.minIdle=10
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.maxOpenPreparedStatements=false
spring.datasource.validationQuery=SELECT 1 
spring.datasource.testWhileIdle=true
spring.datasource.testOnborrow =true
spring.datasource.testOnReturn =true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=log4j,stat

